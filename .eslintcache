[{"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/index.js":"1","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/App.js":"2","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/reportWebVitals.js":"3","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Header.js":"4","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Unlockables.js":"5","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/PlayerDashboard.js":"6","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Setup.js":"7","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Footer.js":"8","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/utilities/DataContext.js":"9","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Recruitment.js":"10","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/MapTabs.js":"11","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/RedStarTracker.js":"12","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/HQ.js":"13","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/AmmoShortage.js":"14","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Bunker.js":"15","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Mercenary.js":"16","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/BioHazard.js":"17","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Star.js":"18","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Odds.js":"19","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Rooms.js":"20","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/CombatModal.js":"21","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Die.js":"22"},{"size":548,"mtime":1610743461685,"results":"23","hashOfConfig":"24"},{"size":1089,"mtime":1611080844122,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1610743461685,"results":"26","hashOfConfig":"24"},{"size":1498,"mtime":1611080844123,"results":"27","hashOfConfig":"24"},{"size":3690,"mtime":1610743461685,"results":"28","hashOfConfig":"24"},{"size":2443,"mtime":1611689029259,"results":"29","hashOfConfig":"24"},{"size":8023,"mtime":1611698010430,"results":"30","hashOfConfig":"24"},{"size":159,"mtime":1610743461682,"results":"31","hashOfConfig":"24"},{"size":38844,"mtime":1611687774543,"results":"32","hashOfConfig":"24"},{"size":1294,"mtime":1610743461683,"results":"33","hashOfConfig":"24"},{"size":6504,"mtime":1611687774540,"results":"34","hashOfConfig":"24"},{"size":607,"mtime":1611688902726,"results":"35","hashOfConfig":"24"},{"size":477,"mtime":1610743461682,"results":"36","hashOfConfig":"24"},{"size":470,"mtime":1610743461681,"results":"37","hashOfConfig":"24"},{"size":478,"mtime":1610743461681,"results":"38","hashOfConfig":"24"},{"size":474,"mtime":1610743461683,"results":"39","hashOfConfig":"24"},{"size":475,"mtime":1610743461681,"results":"40","hashOfConfig":"24"},{"size":618,"mtime":1611688902726,"results":"41","hashOfConfig":"24"},{"size":1643,"mtime":1610743461683,"results":"42","hashOfConfig":"24"},{"size":3431,"mtime":1611080844124,"results":"43","hashOfConfig":"24"},{"size":11645,"mtime":1611778253445,"results":"44","hashOfConfig":"24"},{"size":1281,"mtime":1611778036857,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"fis3vn",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/index.js",[],["103","104"],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/App.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/reportWebVitals.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Header.js",["105"],"import React, { useState } from 'react';\nimport { Collapse, Button, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\n\nconst Header = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" light expand=\"md\">\n        <NavbarBrand className='text-light' href=\"/\">Risk Legacy Helper</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem className='m-2'>\n              <NavLink>\n                <Button href='/game'>\n                  <h6>Play</h6>\n                </Button>\n              </NavLink>\n            </NavItem>\n            <NavItem className='m-2'>\n              <NavLink>\n                <Button href='/setup'>\n                  <h6>New Game</h6>\n                </Button>\n              </NavLink>\n            </NavItem>\n            <NavItem className='m-2'>\n              <NavLink>\n                <Button href='/unlockables'>\n                  <h6>Unlockables</h6>\n                </Button>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Unlockables.js",["106","107","108"],"import React, { useState } from 'react'\nimport { Card, CardHeader, Container, Row, Col, CardBody, CardFooter, Button } from 'reactstrap';\n\nconst Unlockables = (props) => {\n    {/* players will need to be moved to a useContext helper that is populated from Austin's new game modal */ }\n\n    return (\n        <Container className='mt-3'>\n            <Row>\n                <div className='card-deck'>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Founded all 9 minor cities.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    First Time a Faction is Eliminated from the Game.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When Three Missiles Are Used On the Same Combat Roll.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When The World Capital Mark Is About To Go On The Board.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When One Person Gets to Sign the Board For A Second Time.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When Someone Is About To Place 30+ Troops On The Board And Has A Missile.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                </div>\n\n            </Row>\n\n\n        </Container>\n    );\n};\n\nexport default Unlockables;","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/PlayerDashboard.js",["109"],"import React, { useState, useContext } from 'react'\nimport { Card, CardTitle, Row, Col, Container, CardDeck, Button } from 'reactstrap';\nimport RedStarTracker from './RedStarTracker'\nimport Recruitment from './Recruitment'\nimport MapTabs from './MapTabs';\nimport DataContext from '../utilities/DataContext';\n\nconst PlayerDashboard = (props) => {\n\n    //map through each continent within the territories JSON\n    //return array of territories objects\n\n    const { players } = useContext(DataContext)\n\n\n    return (\n        <Container className='mt-3'>\n            {/* <Row className='mt-3'> */}\n            <CardDeck>\n                <Card>\n                    <Row className='my-2'>\n                        <Col>\n                            <h3 className='my-2'>Active Player</h3>\n                        </Col>\n                        <Col>\n                            <Button className='my-1'>Recruit Troops</Button>\n                            <Button className='my-1'>Attack and Expand</Button>\n                            <Button className='my-1'>Friendly Move</Button>\n                        </Col>\n                    </Row>\n                </Card>\n                <Card>\n                    <Row className=\"my-3 justify-content-center\">\n                        {players.map((item, idx) => {\n                            return (\n                                <Col key={idx} className='my-2'>\n                                    <RedStarTracker player={item} />\n                                </Col>\n                            )\n                        })\n                        }\n                    </Row>\n                </Card>\n            </CardDeck>\n\n            <Row className=\"mt-3\">\n                <Col>\n                    <Row>\n                        <Col>\n                            <Recruitment\n                                players={players}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row className=\"mt-3\">\n                <Col>\n                    {/* Territory Pane */}\n                    <Card body>\n                        <CardTitle tag=\"h5\">Territories</CardTitle>\n                        <MapTabs\n                            players={players}\n                        />\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PlayerDashboard;","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Setup.js",["110","111","112"],"import React, { useState, useContext } from 'react'\nimport { Collapse, Row, Card, CardHeader, Container, Col, CardBody, Button, Label, Input } from 'reactstrap';\nimport DataContext from '../utilities/DataContext';\nimport Unlockables from './Unlockables';\n\nconst Setup = (props) => {\n    const [draft, setDraft] = useState(false)\n\n    const { players, setPlayers } = useContext(DataContext)\n    //const [localPlayers, setLocalPlayers] = useState([])\n    const { factions, setFactions } = useContext(DataContext)\n    const [numberOfPlayers, setNumberOfPlayers] = useState(5)\n    const [playersLocked, setPlayersLocked] = useState(false)\n    const [allPlayersReady, setAllPlayersReady] = useState(false)\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    function addPlayer() {\n        setNumberOfPlayers(numberOfPlayers + 1)\n        let proxy = players\n        proxy.push({ id: players.length, name: \"\", faction: {} })\n        setPlayers(proxy)\n        console.log({ players })\n    }\n\n    function removePlayer() {\n        setNumberOfPlayers(numberOfPlayers - 1)\n        let proxy = players\n        proxy.pop()\n        setPlayers(proxy)\n        console.log({ players })\n    }\n    function readyPlayer() {\n\n    }\n\n    function submitPlayers() {\n        //disable player name inputs and open drafting choices\n        setPlayersLocked(true)\n        //assign player names to context hook\n        setPlayers([\n            { id: 0, name: \"\", faction: {}, ready: false },\n            { id: 1, name: \"\", faction: {}, ready: false },\n            { id: 2, name: \"\", faction: {}, ready: false },\n            { id: 3, name: \"\", faction: {}, ready: false },\n            { id: 4, name: \"\", faction: {}, ready: false },\n        ])\n    }\n\n    return (\n        <Container className='mt-3'>\n            <Row>\n                <Col>\n                    <Button color=\"secondary\" onClick={toggle} style={{ marginBottom: '1rem' }}>Unlocks</Button>\n                    <Collapse isOpen={isOpen}>\n                        <Card>\n                            <CardBody>\n                                <Unlockables/>\n                        </CardBody>\n                        </Card>\n                    </Collapse>\n                </Col>\n            </Row>\n\n\n            {/* # of Players */}\n            <Row className='justify-content-center my-3'>\n                <h3 className='mr-2'>Number of Players:</h3>\n                {\n                    players.length > 3 && !playersLocked ?\n                        <Button onClick={() => removePlayer()} className='mx-2 p-2'>-</Button>\n                        :\n                        <Button disabled className='mx-2 p-2'>-</Button>\n                }\n                <h3 className='my-1'>{players.length}</h3>\n                {\n                    players.length < 5 && !playersLocked ?\n                        <Button onClick={() => addPlayer()} className='mx-2 p-2'>+</Button>\n                        :\n                        <Button disabled className='mx-2 p-2'>+</Button>\n                }\n            </Row>\n            {/* Names of Players */}\n            <Row>\n                {\n                    players.map((player, key) => {\n                        return (\n                            <Col key={key}>\n                                {\n                                    player.ready ?\n                                        <>\n                                            <Label>Player Name</Label>\n                                            <Input required></Input>\n                                            <Button className='bg-success my-3'>Ready</Button>\n                                        </>\n                                        :\n                                        <>\n                                            <Label>Player Name</Label>\n                                            <Input required></Input>\n                                            <Button onClick={() => readyPlayer()} className='bg-danger my-3'>Ready</Button>\n                                        </>\n                                }\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n            {\n                !playersLocked ?\n                    <>\n                        {\n                            allPlayersReady ?\n                                <Button className='my-3' onClick={() => submitPlayers()}>Submit</Button>\n\n                                :\n\n                                <Button disabled className='my-3'>Submit</Button>\n                        }\n                        {/* Submit button to lock in the player names */}\n                    </>\n                    :\n                    <>\n                        <Button className='my-3' onClick={() => setPlayersLocked(false)}>Go Back</Button>\n                        {/* If draft has been unlocked (via founding all minor cities) then draft process commence, else pick in pre-determined order */}\n                        {\n                            draft ?\n                                //show draft cards and snake draft for Faction, Turn Order, HQ Placement Order, Starting Troops, Coin Cards\n                                <>\n                                    <h3>Draft True</h3>\n                                </>\n                                :\n                                <>\n                                    <h3>Draft False</h3>\n                                </>\n                            //Pick Order to select Faction, Turn Order, HQ Placement Order\n                        }\n                        <Row>\n                            {\n                                factions.map((faction, key) => {\n                                    return (\n                                        <>\n                                            {\n                                                faction.unlocked &&\n                                                <Col key={key} className='col-6 mb-3' >\n                                                    <Card>\n                                                        <CardHeader>{faction.name}</CardHeader>\n                                                        <CardBody>\n                                                            <ul>\n                                                                {faction.bringerOfNuclearFire && <li className='mb-2'>Bringer of Nuclear Fire</li>}\n                                                                {faction.startingPower && <li className='mb-2'>{faction.startingPower[0]}</li>}\n                                                                {faction.startingPower && <li className='mb-2'>{faction.startingPower[1]}</li>}\n                                                                {faction.comebackPower && <li className='mb-2'>{faction.comebackPower}</li>}\n                                                                {faction.missilePower && <li className='mb-2'>{faction.missilePower}</li>}\n                                                                {faction.weakness && <li className='mb-2'>{faction.weakness}</li>}\n                                                                {faction.privateMission && <li className='mb-2'>{faction.privateMission}</li>}\n                                                            </ul>\n                                                        </CardBody>\n                                                    </Card>\n                                                </Col>\n                                            }\n                                        </>\n                                    )\n                                })\n                            }\n                        </Row>\n                        <Row>\n                            {\n\n                            }\n                        </Row>\n                    </>\n            }\n\n        </Container >\n    );\n};\n\nexport default Setup;","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Footer.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/utilities/DataContext.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Recruitment.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/MapTabs.js",["113","114"],"import React, { useState, useContext } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, ListGroup, ListGroupItem, Collapse, Card, CardHeader, Badge } from 'reactstrap';\nimport classnames from 'classnames';\nimport CombatRoll from './CombatRoll';\nimport AmmoShortage from './AmmoShortage';\nimport HQ from './HQ';\nimport Bunker from './Bunker';\nimport Mercenary from './Mercenary';\nimport BioHazard from './BioHazard';\nimport DataContext from '../utilities/DataContext';\n\nconst MapTabs = (props) => {\n    const [activeTab, setActiveTab] = useState('1');\n    const toggle = tab => { if (activeTab !== tab) setActiveTab(tab); }\n    const [toggleCollapse, setToggleCollapse] = useState(-1);\n    const { regions, setRegions } = useContext(DataContext)\n    \n\n    function toggleAccordian(id) {\n        if (toggleCollapse == id) {\n            setToggleCollapse(-1)\n        }\n        else {\n            setToggleCollapse(id)\n        }\n    }\n\n\n    return (\n        <>\n            <Nav tabs>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { toggle('1'); }}>Group by Continent</NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { toggle('2'); }}>Group by Player</NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <Row>\n                        <Col sm=\"12\">\n                            {\n                                regions.map((region, idx) => {\n                                    return (\n                                        <>\n                                            <Card key={idx}>\n                                                <CardHeader onClick={() => toggleAccordian(idx)}>\n                                                    <h5>{region.continent} <Badge className=\"text-light rounded-pill bg-secondary ml-3\">{region.bonus}</Badge></h5>\n                                                </CardHeader>\n                                                <Collapse isOpen={toggleCollapse === idx ? true : false}>\n                                                    <ListGroup>\n                                                        {\n                                                            region.territories.map((i, key) => {\n                                                                return (\n                                                                    <ListGroupItem key={key}>\n                                                                        <h5>\n                                                                            {i.name}\n                                                                            <HQ hq={i.hq} />\n                                                                            <Bunker bunker={i.bunker} />\n                                                                            <AmmoShortage ammoShortage={i.ammoShortage} />\n                                                                            <Mercenary mercenary={i.mercenary} />\n                                                                            <BioHazard bioHazard={i.bioHazard} />\n                                                                            <CombatRoll />\n                                                                        </h5>\n                                                                    </ListGroupItem>\n                                                                )\n                                                            })\n                                                        }\n                                                    </ListGroup>\n                                                </Collapse>\n                                            </Card>\n                                        </>\n                                    )\n                                })\n                            }\n                        </Col>\n                    </Row>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <Row>\n                        <Col sm=\"12\">\n                            {\n                                props.players.map((player, idx) => {\n                                    return (\n                                        <>\n                                            <Card key={idx}>\n                                                <CardHeader onClick={() => setToggleCollapse(idx)}>\n                                                    <h5>{player.name}</h5>\n                                                </CardHeader>\n                                                <Collapse isOpen={toggleCollapse === idx ? true : false}>\n                                                    <ListGroup>\n                                                    </ListGroup>\n                                                </Collapse>\n                                            </Card>\n                                        </>\n                                    )\n                                })\n                            }\n                        </Col>\n                    </Row>\n                </TabPane>\n            </TabContent>\n        </>\n    );\n}\n\nexport default MapTabs;","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/RedStarTracker.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/HQ.js",["115"],"import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst HQ = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.hq &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={props.player.color} icon={faUserPlus} />            \n            }\n        </>\n    )\n}\n\nexport default HQ","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/AmmoShortage.js",["116"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBan } from '@fortawesome/free-solid-svg-icons'\n\nconst AmmoShortage = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.ammoShortage &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'red'} icon={faBan} />\n            }\n        </>\n    )\n}\n\nexport default AmmoShortage","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Bunker.js",["117"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFortAwesomeAlt } from '@fortawesome/free-brands-svg-icons'\n\nconst Bunker = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.bunker &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-3x' color={'orange'} icon={faFortAwesomeAlt} />\n            }\n        </>\n    )\n}\n\nexport default Bunker","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Mercenary.js",["118"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst Mercenary = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.mercenary &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'black'} icon={faUserPlus} />\n\n            }\n        </>\n    )\n}\n\nexport default Mercenary","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/BioHazard.js",["119"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBiohazard } from '@fortawesome/free-solid-svg-icons'\n\nconst BioHazard = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.bioHazard &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'green'} icon={faBiohazard} />\n            }\n        </>\n    )\n}\n\nexport default BioHazard","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Star.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Odds.js",["120"],"import React, { useState } from 'react';\nimport { Row, Col, Label, Progress } from 'reactstrap';\n\nconst Odds = (props) => {\n    const [battleSelected, setBattleSelected] = useState(true)\n\n    return (\n        <>\n            <Row>\n                <Col className='text-center text-success'>\n                    <Label >Defender Loses 2</Label>\n                </Col>\n                <Col className='text-center text-warning'>\n                    <Label >Both Lose 1</Label>\n                </Col>\n                <Col className='text-center text-danger'>\n                    <Label >Attacker Loses 2</Label>\n                </Col>\n            </Row>\n            {\n                battleSelected ? \n                <Row>\n                    <Col>\n                        <Progress className='m-3' multi>\n                            <Progress bar color=\"success\" value=\"55\">55%</Progress>\n                            <Progress bar color=\"warning\" value=\"10\">10%</Progress>\n                            <Progress bar color=\"danger\" value=\"35\">35%</Progress>\n                        </Progress>\n                    </Col>\n                </Row>\n                :\n                <Row>\n                    <Col>\n                        <Progress className='m-3' multi>\n                            <Progress bar color=\"success\" value=\"0\"></Progress>\n                            <Progress bar color=\"warning\" value=\"0\"></Progress>\n                            <Progress bar color=\"danger\" value=\"0\"></Progress>\n                        </Progress>\n                    </Col>\n                </Row>\n            }\n        </>\n    );\n};\n\nexport default Odds;","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Rooms.js",["121","122"],"import React, { useState } from 'react';\nimport { Container, ListGroup, ListGroupItem, Row, Col, Card, CardHeader, CardBody, CardFooter, Button } from 'reactstrap';\n\nconst Rooms = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <Card>\n                            <CardHeader></CardHeader>\n                            <CardBody>\n                                <ListGroup flush>\n                                    <ListGroupItem action>\n                                        <Row>\n                                            <Col>\n                                                Room: XAGB\n                                            </Col>\n                                            <Col>\n                                                Host: Jim\n                                            </Col>\n                                            <Col>\n                                                <Button>Join</Button>\n                                            </Col>\n                                        </Row>\n                                    </ListGroupItem>\n                                    <ListGroupItem action>\n                                        <Row>\n                                            <Col>\n                                                Room: JKKS\n                                            </Col>\n                                            <Col>\n                                                Host: Joe\n                                            </Col>\n                                            <Col>\n                                                <Button>Join</Button>\n                                            </Col>\n                                        </Row>\n                                    </ListGroupItem>\n                                    <ListGroupItem action>\n                                        <Row>\n                                            <Col>\n                                                Room: AJIF\n                                            </Col>\n                                            <Col>\n                                                Host: Jack\n                                            </Col>\n                                            <Col>\n                                                <Button>Join</Button>\n                                            </Col>\n                                        </Row>\n                                    </ListGroupItem>\n                                </ListGroup>\n                            </CardBody>\n                            <CardFooter>\n                                <Button>\n                                    Create New Room\n                                </Button>\n                            </CardFooter>\n                        </Card>\n\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Rooms\n\n\n// {/* <div class=\"col-md-12\">\n//   <div class=\"form-group\">\n//     <div class=\"input-group\">\n//       <span class=\"input-group-addon\">Name</span>\n//       <input type=\"text\" class=\"form-control\">\n//       <div class=\"input-group-btn\">\n//         <button type=\"button\" class=\"btn btn-warning\">\n//           X\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// </div> */}","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/CombatModal.js",["123","124","125","126","127","128","129","130"],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Die.js",["131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":87,"nodeType":"138","messageId":"139","endLine":2,"endColumn":97},{"ruleId":"136","severity":1,"message":"140","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"141","line":2,"column":16,"nodeType":"138","messageId":"139","endLine":2,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":5,"column":5,"nodeType":"144","messageId":"145","endLine":5,"endColumn":113},{"ruleId":"136","severity":1,"message":"140","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"146","line":7,"column":19,"nodeType":"138","messageId":"139","endLine":7,"endColumn":27},{"ruleId":"136","severity":1,"message":"147","line":11,"column":23,"nodeType":"138","messageId":"139","endLine":11,"endColumn":34},{"ruleId":"136","severity":1,"message":"148","line":14,"column":29,"nodeType":"138","messageId":"139","endLine":14,"endColumn":47},{"ruleId":"136","severity":1,"message":"149","line":16,"column":22,"nodeType":"138","messageId":"139","endLine":16,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":19,"column":28,"nodeType":"152","messageId":"153","endLine":19,"endColumn":30},{"ruleId":"136","severity":1,"message":"154","line":6,"column":18,"nodeType":"138","messageId":"139","endLine":6,"endColumn":25},{"ruleId":"136","severity":1,"message":"154","line":6,"column":18,"nodeType":"138","messageId":"139","endLine":6,"endColumn":25},{"ruleId":"136","severity":1,"message":"154","line":6,"column":18,"nodeType":"138","messageId":"139","endLine":6,"endColumn":25},{"ruleId":"136","severity":1,"message":"154","line":6,"column":18,"nodeType":"138","messageId":"139","endLine":6,"endColumn":25},{"ruleId":"136","severity":1,"message":"154","line":6,"column":18,"nodeType":"138","messageId":"139","endLine":6,"endColumn":25},{"ruleId":"136","severity":1,"message":"155","line":5,"column":28,"nodeType":"138","messageId":"139","endLine":5,"endColumn":45},{"ruleId":"136","severity":1,"message":"156","line":5,"column":12,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"154","line":5,"column":18,"nodeType":"138","messageId":"139","endLine":5,"endColumn":25},{"ruleId":"136","severity":1,"message":"157","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":37},{"ruleId":"136","severity":1,"message":"158","line":4,"column":72,"nodeType":"138","messageId":"139","endLine":4,"endColumn":77},{"ruleId":"136","severity":1,"message":"159","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":14},{"ruleId":"136","severity":1,"message":"160","line":6,"column":8,"nodeType":"138","messageId":"139","endLine":6,"endColumn":14},{"ruleId":"136","severity":1,"message":"161","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":20},{"ruleId":"136","severity":1,"message":"162","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":12},{"ruleId":"136","severity":1,"message":"163","line":9,"column":8,"nodeType":"138","messageId":"139","endLine":9,"endColumn":19},{"ruleId":"136","severity":1,"message":"164","line":24,"column":12,"nodeType":"138","messageId":"139","endLine":24,"endColumn":23},{"ruleId":"136","severity":1,"message":"140","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'NavbarText' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CardHeader' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setDraft' is assigned a value but never used.","'setFactions' is assigned a value but never used.","'setAllPlayersReady' is assigned a value but never used.","'setRegions' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setTest' is assigned a value but never used.","'setBattleSelected' is assigned a value but never used.","'test' is assigned a value but never used.","'useContext' is defined but never used.","'Input' is defined but never used.","'Select' is defined but never used.","'Bunker' is defined but never used.","'AmmoShortage' is defined but never used.","'Odds' is defined but never used.","'DataContext' is defined but never used.","'rollMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]