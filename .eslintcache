[{"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/index.js":"1","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/App.js":"2","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/reportWebVitals.js":"3","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Header.js":"4","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Unlockables.js":"5","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/PlayerDashboard.js":"6","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Setup.js":"7","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Footer.js":"8","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/utilities/DataContext.js":"9","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Recruitment.js":"10","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/MapTabs.js":"11","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/RedStarTracker.js":"12","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/HQ.js":"13","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/AmmoShortage.js":"14","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Bunker.js":"15","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Mercenary.js":"16","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/BioHazard.js":"17","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Star.js":"18","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Odds.js":"19","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Rooms.js":"20","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/CombatModal.js":"21"},{"size":548,"mtime":1610743461685,"results":"22","hashOfConfig":"23"},{"size":1089,"mtime":1611080844122,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1610743461685,"results":"25","hashOfConfig":"23"},{"size":1498,"mtime":1611080844123,"results":"26","hashOfConfig":"23"},{"size":3690,"mtime":1610743461685,"results":"27","hashOfConfig":"23"},{"size":2496,"mtime":1611682611763,"results":"28","hashOfConfig":"23"},{"size":7417,"mtime":1611089403680,"results":"29","hashOfConfig":"23"},{"size":159,"mtime":1610743461682,"results":"30","hashOfConfig":"23"},{"size":38844,"mtime":1611087263827,"results":"31","hashOfConfig":"23"},{"size":1294,"mtime":1610743461683,"results":"32","hashOfConfig":"23"},{"size":5441,"mtime":1611681365359,"results":"33","hashOfConfig":"23"},{"size":525,"mtime":1610743461683,"results":"34","hashOfConfig":"23"},{"size":477,"mtime":1610743461682,"results":"35","hashOfConfig":"23"},{"size":470,"mtime":1610743461681,"results":"36","hashOfConfig":"23"},{"size":478,"mtime":1610743461681,"results":"37","hashOfConfig":"23"},{"size":474,"mtime":1610743461683,"results":"38","hashOfConfig":"23"},{"size":475,"mtime":1610743461681,"results":"39","hashOfConfig":"23"},{"size":618,"mtime":1610743461684,"results":"40","hashOfConfig":"23"},{"size":1643,"mtime":1610743461683,"results":"41","hashOfConfig":"23"},{"size":3431,"mtime":1611080844124,"results":"42","hashOfConfig":"23"},{"size":7314,"mtime":1611681381508,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"fis3vn",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/index.js",[],["97","98"],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/App.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/reportWebVitals.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Header.js",["99"],"import React, { useState } from 'react';\nimport { Collapse, Button, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\n\nconst Header = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"dark\" light expand=\"md\">\n        <NavbarBrand className='text-light' href=\"/\">Risk Legacy Helper</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem className='m-2'>\n              <NavLink>\n                <Button href='/game'>\n                  <h6>Play</h6>\n                </Button>\n              </NavLink>\n            </NavItem>\n            <NavItem className='m-2'>\n              <NavLink>\n                <Button href='/setup'>\n                  <h6>New Game</h6>\n                </Button>\n              </NavLink>\n            </NavItem>\n            <NavItem className='m-2'>\n              <NavLink>\n                <Button href='/unlockables'>\n                  <h6>Unlockables</h6>\n                </Button>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Unlockables.js",["100","101","102"],"import React, { useState } from 'react'\nimport { Card, CardHeader, Container, Row, Col, CardBody, CardFooter, Button } from 'reactstrap';\n\nconst Unlockables = (props) => {\n    {/* players will need to be moved to a useContext helper that is populated from Austin's new game modal */ }\n\n    return (\n        <Container className='mt-3'>\n            <Row>\n                <div className='card-deck'>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Founded all 9 minor cities.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    First Time a Faction is Eliminated from the Game.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When Three Missiles Are Used On the Same Combat Roll.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When The World Capital Mark Is About To Go On The Board.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When One Person Gets to Sign the Board For A Second Time.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                    <Col className='col-6 mb-3'>\n                        <Card>\n                            <>\n                                <CardBody>\n                                    Open When Someone Is About To Place 30+ Troops On The Board And Has A Missile.\n                                </CardBody>\n                                <CardFooter>\n                                    <Button>Open</Button>\n                                </CardFooter>\n                            </>\n\n                        </Card>\n                    </Col>\n                </div>\n\n            </Row>\n\n\n        </Container>\n    );\n};\n\nexport default Unlockables;","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/PlayerDashboard.js",["103"],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Setup.js",["104","105","106"],"import React, { useState, useContext } from 'react'\nimport { Row, Card, CardHeader, Container, Col, CardBody, Button, Label, Input } from 'reactstrap';\nimport DataContext from '../utilities/DataContext';\n\nconst Setup = (props) => {\n    const [draft, setDraft] = useState(false)\n\n    const { players, setPlayers } = useContext(DataContext)\n    //const [localPlayers, setLocalPlayers] = useState([])\n    const { factions, setFactions } = useContext(DataContext)\n    const [numberOfPlayers, setNumberOfPlayers] = useState(5)\n    const [playersLocked, setPlayersLocked] = useState(false)\n    const [allPlayersReady, setAllPlayersReady] = useState(false)\n\n    function addPlayer() {\n        setNumberOfPlayers(numberOfPlayers + 1)\n        let proxy = players\n        proxy.push({ id: players.length, name: \"\", faction: {} })\n        setPlayers(proxy)\n        console.log({ players })\n    }\n\n    function removePlayer() {\n        setNumberOfPlayers(numberOfPlayers - 1)\n        let proxy = players\n        proxy.pop()\n        setPlayers(proxy)\n        console.log({ players })\n    }\n    function readyPlayer() {\n\n    }\n\n    function submitPlayers() {\n        //disable player name inputs and open drafting choices\n        setPlayersLocked(true)\n        //assign player names to context hook\n        setPlayers([\n            { id: 0, name: \"\", faction: {}, ready: false },\n            { id: 1, name: \"\", faction: {}, ready: false },\n            { id: 2, name: \"\", faction: {}, ready: false },\n            { id: 3, name: \"\", faction: {}, ready: false },\n            { id: 4, name: \"\", faction: {}, ready: false },\n        ])\n    }\n\n    return (\n        <Container className='mt-3'>\n            {/* # of Players */}\n            <Row className='justify-content-center my-3'>\n                <h3 className='mr-2'>Number of Players:</h3>\n                {\n                    players.length > 3 && !playersLocked ?\n                        <Button onClick={() => removePlayer()} className='mx-2 p-2'>-</Button>\n                        :\n                        <Button disabled className='mx-2 p-2'>-</Button>\n                }\n                <h3 className='my-1'>{players.length}</h3>\n                {\n                    players.length < 5 && !playersLocked ?\n                        <Button onClick={() => addPlayer()} className='mx-2 p-2'>+</Button>\n                        :\n                        <Button disabled className='mx-2 p-2'>+</Button>\n                }\n            </Row>\n            {/* Names of Players */}\n            <Row>\n                {\n                    players.map((player, key) => {\n                        return (\n                            <Col key={key}>\n                                {\n                                    player.ready ?\n                                        <>\n                                            <Label>Player Name</Label>\n                                            <Input required></Input>\n                                            <Button className='bg-success my-3'>Ready</Button>\n                                        </>\n                                        :\n                                        <>\n                                            <Label>Player Name</Label>\n                                            <Input required></Input>\n                                            <Button onClick={() => readyPlayer()} className='bg-danger my-3'>Ready</Button>\n                                        </>\n                                }\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n            {\n                !playersLocked ?\n                    <>\n                        {\n                            allPlayersReady ?\n                                <Button className='my-3' onClick={() => submitPlayers()}>Submit</Button>\n\n                                :\n\n                                <Button disabled className='my-3'>Submit</Button>\n                        }\n                        {/* Submit button to lock in the player names */}\n                    </>\n                    :\n                    <>\n                        <Button className='my-3' onClick={() => setPlayersLocked(false)}>Go Back</Button>\n                        {/* If draft has been unlocked (via founding all minor cities) then draft process commence, else pick in pre-determined order */}\n                        {\n                            draft ?\n                                //show draft cards and snake draft for Faction, Turn Order, HQ Placement Order, Starting Troops, Coin Cards\n                                <>\n                                    <h3>Draft True</h3>\n                                </>\n                                :\n                                <>\n                                    <h3>Draft False</h3>\n                                </>\n                            //Pick Order to select Faction, Turn Order, HQ Placement Order\n                        }\n                        <Row>\n                            {\n                                factions.map((faction, key) => {\n                                    return (\n                                        <>\n                                            {\n                                                faction.unlocked &&\n                                                <Col key={key} className='col-6 mb-3' >\n                                                    <Card>\n                                                        <CardHeader>{faction.name}</CardHeader>\n                                                        <CardBody>\n                                                            <ul>\n                                                                {faction.bringerOfNuclearFire && <li className='mb-2'>Bringer of Nuclear Fire</li>}\n                                                                {faction.startingPower && <li className='mb-2'>{faction.startingPower[0]}</li>}\n                                                                {faction.startingPower && <li className='mb-2'>{faction.startingPower[1]}</li>}\n                                                                {faction.comebackPower && <li className='mb-2'>{faction.comebackPower}</li>}\n                                                                {faction.missilePower && <li className='mb-2'>{faction.missilePower}</li>}\n                                                                {faction.weakness && <li className='mb-2'>{faction.weakness}</li>}\n                                                                {faction.privateMission && <li className='mb-2'>{faction.privateMission}</li>}\n                                                            </ul>\n                                                        </CardBody>\n                                                    </Card>\n                                                </Col>\n                                            }\n                                        </>\n                                    )\n                                })\n                            }\n                        </Row>\n                        <Row>\n                            {\n\n                            }\n                        </Row>\n                    </>\n            }\n\n        </Container >\n    );\n};\n\nexport default Setup;","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Footer.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/utilities/DataContext.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Recruitment.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/MapTabs.js",["107","108"],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/RedStarTracker.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/HQ.js",["109"],"import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst HQ = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.hq &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={props.player.color} icon={faUserPlus} />            \n            }\n        </>\n    )\n}\n\nexport default HQ","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/AmmoShortage.js",["110"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBan } from '@fortawesome/free-solid-svg-icons'\n\nconst AmmoShortage = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.ammoShortage &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'red'} icon={faBan} />\n            }\n        </>\n    )\n}\n\nexport default AmmoShortage","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Bunker.js",["111"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFortAwesomeAlt } from '@fortawesome/free-brands-svg-icons'\n\nconst Bunker = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.bunker &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-3x' color={'orange'} icon={faFortAwesomeAlt} />\n            }\n        </>\n    )\n}\n\nexport default Bunker","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Mercenary.js",["112"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst Mercenary = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.mercenary &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'black'} icon={faUserPlus} />\n\n            }\n        </>\n    )\n}\n\nexport default Mercenary","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/BioHazard.js",["113"],"import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBiohazard } from '@fortawesome/free-solid-svg-icons'\n\nconst BioHazard = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            {\n                test.bioHazard &&\n                    <FontAwesomeIcon className='m-2 mt-3 fa-2x' color={'green'} icon={faBiohazard} />\n            }\n        </>\n    )\n}\n\nexport default BioHazard","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Star.js",[],"/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Odds.js",["114"],"import React, { useState } from 'react';\nimport { Row, Col, Label, Progress } from 'reactstrap';\n\nconst Odds = (props) => {\n    const [battleSelected, setBattleSelected] = useState(true)\n\n    return (\n        <>\n            <Row>\n                <Col className='text-center text-success'>\n                    <Label >Defender Loses 2</Label>\n                </Col>\n                <Col className='text-center text-warning'>\n                    <Label >Both Lose 1</Label>\n                </Col>\n                <Col className='text-center text-danger'>\n                    <Label >Attacker Loses 2</Label>\n                </Col>\n            </Row>\n            {\n                battleSelected ? \n                <Row>\n                    <Col>\n                        <Progress className='m-3' multi>\n                            <Progress bar color=\"success\" value=\"55\">55%</Progress>\n                            <Progress bar color=\"warning\" value=\"10\">10%</Progress>\n                            <Progress bar color=\"danger\" value=\"35\">35%</Progress>\n                        </Progress>\n                    </Col>\n                </Row>\n                :\n                <Row>\n                    <Col>\n                        <Progress className='m-3' multi>\n                            <Progress bar color=\"success\" value=\"0\"></Progress>\n                            <Progress bar color=\"warning\" value=\"0\"></Progress>\n                            <Progress bar color=\"danger\" value=\"0\"></Progress>\n                        </Progress>\n                    </Col>\n                </Row>\n            }\n        </>\n    );\n};\n\nexport default Odds;","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/Rooms.js",["115","116"],"import React, { useState } from 'react';\nimport { Container, ListGroup, ListGroupItem, Row, Col, Card, CardHeader, CardBody, CardFooter, Button } from 'reactstrap';\n\nconst Rooms = (props) => {\n    const [test, setTest] = useState({})\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <Card>\n                            <CardHeader></CardHeader>\n                            <CardBody>\n                                <ListGroup flush>\n                                    <ListGroupItem action>\n                                        <Row>\n                                            <Col>\n                                                Room: XAGB\n                                            </Col>\n                                            <Col>\n                                                Host: Jim\n                                            </Col>\n                                            <Col>\n                                                <Button>Join</Button>\n                                            </Col>\n                                        </Row>\n                                    </ListGroupItem>\n                                    <ListGroupItem action>\n                                        <Row>\n                                            <Col>\n                                                Room: JKKS\n                                            </Col>\n                                            <Col>\n                                                Host: Joe\n                                            </Col>\n                                            <Col>\n                                                <Button>Join</Button>\n                                            </Col>\n                                        </Row>\n                                    </ListGroupItem>\n                                    <ListGroupItem action>\n                                        <Row>\n                                            <Col>\n                                                Room: AJIF\n                                            </Col>\n                                            <Col>\n                                                Host: Jack\n                                            </Col>\n                                            <Col>\n                                                <Button>Join</Button>\n                                            </Col>\n                                        </Row>\n                                    </ListGroupItem>\n                                </ListGroup>\n                            </CardBody>\n                            <CardFooter>\n                                <Button>\n                                    Create New Room\n                                </Button>\n                            </CardFooter>\n                        </Card>\n\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Rooms\n\n\n// {/* <div class=\"col-md-12\">\n//   <div class=\"form-group\">\n//     <div class=\"input-group\">\n//       <span class=\"input-group-addon\">Name</span>\n//       <input type=\"text\" class=\"form-control\">\n//       <div class=\"input-group-btn\">\n//         <button type=\"button\" class=\"btn btn-warning\">\n//           X\n//         </button>\n//       </div>\n//     </div>\n//   </div>\n// </div> */}","/Users/reesehudson/Sites/bootcampF20/projects/risk-player-aid/src/Components/CombatModal.js",["117","118","119","120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":87,"nodeType":"127","messageId":"128","endLine":2,"endColumn":97},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"130","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":5,"column":5,"nodeType":"133","messageId":"134","endLine":5,"endColumn":113},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"135","line":6,"column":19,"nodeType":"127","messageId":"128","endLine":6,"endColumn":27},{"ruleId":"125","severity":1,"message":"136","line":10,"column":23,"nodeType":"127","messageId":"128","endLine":10,"endColumn":34},{"ruleId":"125","severity":1,"message":"137","line":13,"column":29,"nodeType":"127","messageId":"128","endLine":13,"endColumn":47},{"ruleId":"125","severity":1,"message":"138","line":16,"column":22,"nodeType":"127","messageId":"128","endLine":16,"endColumn":32},{"ruleId":"139","severity":1,"message":"140","line":20,"column":28,"nodeType":"141","messageId":"142","endLine":20,"endColumn":30},{"ruleId":"125","severity":1,"message":"143","line":6,"column":18,"nodeType":"127","messageId":"128","endLine":6,"endColumn":25},{"ruleId":"125","severity":1,"message":"143","line":6,"column":18,"nodeType":"127","messageId":"128","endLine":6,"endColumn":25},{"ruleId":"125","severity":1,"message":"143","line":6,"column":18,"nodeType":"127","messageId":"128","endLine":6,"endColumn":25},{"ruleId":"125","severity":1,"message":"143","line":6,"column":18,"nodeType":"127","messageId":"128","endLine":6,"endColumn":25},{"ruleId":"125","severity":1,"message":"143","line":6,"column":18,"nodeType":"127","messageId":"128","endLine":6,"endColumn":25},{"ruleId":"125","severity":1,"message":"144","line":5,"column":28,"nodeType":"127","messageId":"128","endLine":5,"endColumn":45},{"ruleId":"125","severity":1,"message":"145","line":5,"column":12,"nodeType":"127","messageId":"128","endLine":5,"endColumn":16},{"ruleId":"125","severity":1,"message":"143","line":5,"column":18,"nodeType":"127","messageId":"128","endLine":5,"endColumn":25},{"ruleId":"125","severity":1,"message":"146","line":14,"column":12,"nodeType":"127","messageId":"128","endLine":14,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":16,"column":5,"nodeType":"133","messageId":"134","endLine":16,"endColumn":113},{"ruleId":"125","severity":1,"message":"147","line":19,"column":26,"nodeType":"127","messageId":"128","endLine":19,"endColumn":40},{"ruleId":"125","severity":1,"message":"148","line":22,"column":14,"nodeType":"127","messageId":"128","endLine":22,"endColumn":22},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'NavbarText' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CardHeader' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setDraft' is assigned a value but never used.","'setFactions' is assigned a value but never used.","'setAllPlayersReady' is assigned a value but never used.","'setRegions' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setTest' is assigned a value but never used.","'setBattleSelected' is assigned a value but never used.","'test' is assigned a value but never used.","'attackingFrom' is assigned a value but never used.","'setTerritories' is assigned a value but never used.","'diceRoll' is defined but never used.","no-global-assign","no-unsafe-negation"]